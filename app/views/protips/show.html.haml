- title "#{@protip.title} (Example)"
- meta canonical: slug_protips_url(id: @protip.public_id, slug: @protip.slug)
- meta keywords: @protip.tags
- meta description: protip_summary
- meta author: profile_url(username: @protip.user.username)
- meta twitter: { creator: @protip.user.twitter }           if @protip.user.twitter
- meta twitter: { creator: { id: @protip.user.twitter_id} } if @protip.user.twitter_id
- meta twitter: { image: avatar_url(@protip.user) }         if @protip.user.avatar
- meta og:      { image: avatar_url(@protip.user) }         if @protip.user.avatar

.container[@protip]
  .hide= time_tag @protip.created_at, itemprop: "datePublished"
  .hide= time_tag @protip.updated_at, itemprop: "dateModified"
  .hide[:name]= @protip.public_id

  .clearfix
    .sm-col.sm-col.sm-col-12.md-col-8
      .clearfix.mt0.mb1
        .sm-right
          %a.no-hover.diminish.inline.mr1{href: slug_protips_url(id: @protip.public_id, slug: @protip.slug)}=@protip.display_date
          %span.xs-hide
            &middot;
            .diminish.inline.mx1
              =icon("eye")
              =number_to_human(@protip.views_count, precision: 4)
          &middot;
          %span.mx1=link_to @protip.user.username, profile_path(username: @protip.user.username)
          .avatar[:image]{style: "background-color: #{@protip.user.color};"}=avatar_url_tag(@protip.user)

      .card.p1{style: "border-top:solid 5px #{@protip.user.color}"}

        - if signed_in? && current_user.can_edit?(@protip)
          .clearfix.mb2.mt2
            .right.mr1
              =link_to(icon('trash'), protip_path(@protip), method: :delete, class: 'diminish', 'data-confirm': 'This makes us very sad. Are you sure?')
              %a.ml1.btn.rounded.bg-green.white{href: edit_protip_path(@protip)}
                Edit Protip

        - cache ['v2', @protip] do
          %h1.mt4.mb2.center[:headline]=@protip.title
          .center.mr1[:keywords]
            -@protip.tags.each do |tag|
              %h6.diminish.inline.px1=link_to tag, popular_topic_path(topic: tag)
          .content.p2.mt4[:articleBody]
            = sanitize CoderwallFlavoredMarkdown.render_to_html(@protip.body)


          .clearfix.mt1.mb3.mx2.py2
            .clearfix.border-bottom[:author]
              %h4
                Written by
                %a.bold[@protip.user]{href: profile_path(username: @protip.user.username)}
                  %span.blue[:name]=@protip.user.display_name

            .clearfix.mt1
              .btn.btn-small.pl0.mr1.mb1.xs-block
                = react_component 'Heartable', props: { id: dom_id(@protip),
                  href: protip_likes_path(@protip),
                  initialCount: @protip.likes_count,
                  showLabel: true }

              %a.btn.btn-small.pl0.mb1.mr1.xs-block{href: "http://twitter.com/home?status=#{protip_tweet_message}", target: 'twitter'}
                %span.fixed-space-4=icon('twitter', class: 'aqua h4')
                %span Say Thanks

              .btn.btn-small.pl0.mb1.mr1.xs-block
                = react_component 'ProtipSubscribeButton'

              - if !signed_in?
                %a.btn.btn-small.pl0.mb1.mr1.xs-block{ href: sign_up_path }
                  %span.fixed-space-4= icon('comment-o', class: 'black h4')
                  Respond


        .clearfix
          -if signed_in?
            #new-comment.new-comment.mt2.mb2.px2
              -if flash[:error]
                .clearfix.mb2.mt1.bg-red.white.py2.center.bold.rounded=flash[:error]
              = form_for Comment.new do |form|
                = invisible_captcha
                .border.rounded
                  = form.hidden_field :article_id, value: @protip.id
                  = form.text_area :body, rows: 1, class: 'field block col-12 focus-no-border focus-pb3', placeholder: "Share a response", style: 'border: none; outline: none', value: flash[:data]
                  .text-area-footer.px1.py1.font-sm
                    Markdown is totally
                    =icon('thumbs-o-up')
                .clearfix.mt2
                  %button.rounded.border.border--silver.px2.py1.green.bg-white.bold{type: 'submit'} Respond

          -if @protip.comments.present?
            .clearfix.mt3.px2
              %h4
                =pluralize(@protip.comments.size, 'Response')
                .right.hide
                  .btn.btn-small.green Add your response
              =render @protip.comments

    .sm-col.sm-col.sm-col-12.md-col-4
      -if @protip.related_topics.present?
        .clearfix.sm-ml3.mt3.p1.pb3
          %h5.mt0.mb1
            =icon('folder-o', class: 'mr1')
            Filed Under
          %hr
          -@protip.related_topics.each do |topic|
            .topic.clearfix.py1
              %a{href: popular_topic_path(topic: topic)}
                .bold=t(topic, scope: [:categories, :long])

      .clearfix.sm-ml3.mt3.p1
        %h5.mt0.mb1
          =icon('hand-o-right', class: 'mr1')
          Sponsors
        %hr.mt1
        .clearfix.py1
          %a.link.no-hover{href: '/', rel: 'nofollow', target: '_blank'}
            .col.col-3.md-col-2
              %img{class: '', src: 'http://github-jobs.s3.amazonaws.com/4f5ab750-75f5-11e6-9eb9-b2e40bf8047e.png'}
            .overflow-hidden.pl2
              .blue.bold
                Turn Errors into Awesome
              .font-sm.black.mt-third
                Quickly pinpoint what's broken and and why. Get the content
                and insights to defeat all application errors. Learn more.

        .clearfix.py1
          %a.link.no-hover.mt2{href: '/', rel: 'nofollow', target: '_blank'}
            .col.col-3.md-col-2
              %img{class: '', src: 'http://github-jobs.s3.amazonaws.com/3399d7f6-7ac0-11e6-9a05-24bfca6dd7bc.png'}
            .overflow-hidden.pl2
              .blue.bold
                restdb.io
              .font-sm.black
                restdb.io is a simple and secure REST-enabled NoSQL database cloud service.



      - if Stream.any_broadcasting?
        - cache ['v1', 'protips', 'featured-stream', expires_in: 1.minute ] do
          .clearfix.ml3.mt3.md-show
            =render 'streams/preview', stream: Stream.broadcasting.sample

      - else
        - cache ['v3', @protip, 'featured-jobs', expires_in: 1.day ] do
          .clearfix.sm-ml3.mt4.p1
            .clearfix
              .col.col-7
                %h5.mt0
                  =icon('diamond', class: 'mr1')
                  Awesome Job
              .col.col-5
                .right.font-sm.bold
                  %a.block{href: jobs_path}
                    See All Jobs
                    =icon('arrow-right')
            %hr
            -Job.featured(1).each do |job|
              =render 'jobs/mini', job: job

            .mt2.font-sm
              -# %span Need Programmers?
              %a.border--green.green.bold{href: new_job_url}
                Post a job for only
                == $#{Job::COST}

      -if show_ads?
        .clearfix.ml3.mt3
          #bsap_1305410.bsarocks.bsap_74f50e679004d8f4d62fec4b0f74ccf1

%script{ src: "https://cdn.rawgit.com/google/code-prettify/master/loader/run_prettify.js" }
