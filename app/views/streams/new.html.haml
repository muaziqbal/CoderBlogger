-title "Start broadcasting your live stream"

-content_for :breadcrumbs do
  .mxn1.font-tiny.mt0.diminish
    %a.btn.px1{href: live_streams_path} Streams
    .inline.mr1 /
    Your Broadcast


= form_for @stream do |form|
  .container
    .clearfix
      .col.col-12.md-col-8
        .clearfix.mt0.mb1
          -if @stream.broadcasting?
            .left.mr1
              .rounded.p1.bg-red.white.bold LIVE
          -else
            .left.mr1
              .gray.bold OFFLINE

        .card{style: "border-top:solid 5px #{current_user.color}"}
          =react_component 'Video', jwplayerKey: ENV['JWPLAYER_KEY'], source: current_user.stream_source, offlineImage: asset_url('offline-holder'), showStatus: true

          .clearfix.p2
            %h2 Describe Broadcast
            = form.label :title
            = form.text_field :title, type: 'text', class: 'field block col-10 mb2'
            = form.label :body, 'About'
            .diminish.mb1
              Share details about your stream. For example if you are working a project or open source then what the name, purpose, and how far along you are? Do you want feedback, help, or looking for team members? Let others know how they can get involved or follow along.
            = form.text_area :body, rows: 4, class: 'field block col-10'
            .diminish.mb1.py1
              Markdown here is
              =icon('thumbs-o-up')
            = form.label :editable_tags, 'Tags'
            .diminish.mb1
              Comma seperated (e.g. ruby, docker, machine learning) about
              your live stream. Suggestions:
              %br
              %ul
                %li
                  Just use the
                  %strong hacking
                  tag when you are just playing around with no agenda

                %li
                  If you are teaching a topic try tagging it
                  %strong lesson
                %li
                  Suggsting a viewer skill level with
                  %strong beginner, intermediate,
                  or
                  %strong advance
                  is great too
            %div{class: ('field_with_errors' if @stream.errors[:tags].any?)}
              = form.text_field :editable_tags, type: 'text', class: 'field block col-10'
            .py3
              = form.check_box :save_recording, checked: true
              = form.label :save_recording, 'Save recording of stream'
            %button.btn.mt1.rounded.bg-green.white{type: 'submit'} Save
            .mt2.font-sm.diminish
              You are currently offline. Stream information is private until you go online.

      .col.col-12.md-col-4
        .md-ml3
          %h4.ml1.diminish How to Stream
          .flex.flex-column.bg-white.rounded.p1
            %h5 1. Download Free Software
            %p
              %a{href: 'https://obsproject.com'} Open Broadcast
              is free open source software that runs on Windows, Unix, and Macs. It makes live streaming your webcam, desktop, and other media through Coderwall easy.
            %h5 2. Configure Your Stream
            %p
              Go to
              %em Settings
              in
              %a{href: 'https://obsproject.com'} Open Broadcast
              and choose
              %em Stream.
              Then select
              %em Custom Stream Server
              and enter the following private settings:
            .border-box.bg-silver.p1.font-sm.rounded.mb2
              .mb1
                .bold.inline URL:
                rtmp://live.coderwall.com/coderwall
              .mb1
                .bold.inline Stream Key:
                = current_user.stream_name
              .block
                .bold.inline Use authentication:
                No
            %h5 3. Preview Stream
            %p
              After configuring the stream you can see a preview here by clicking
              %em Start Streaming
              in Open Broadcast. Once you see the preview you are ready to publish anytime you want.
            -if @stream.published?
              %button.btn.mt1.rounded.bg-red.white{type: 'submit', name: 'end_stream'} End Stream
            -else
              %button.btn.mt1.rounded.bg-green.white{type: 'submit', name: 'publish_stream'} Publish Live Stream
